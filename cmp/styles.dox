<cmn:g xmlns="http://www.w3.org/1999/xhtml" xmlns:cmn="urn:dox:cmn" xmlns:b="urn:dox:base" xmlns:e="urn:dox:gkbooks/theegg">
	<cmn:script>
		const {cutil} = await import("@ghasemkiani/base");
		const {quantity} = await import("@ghasemkiani/base-utils");
		
		const {St} = context.wdoc;

		cutil.extend(St.prototype, {
			directionRtl() {
				return this.s({
					"direction": "rtl",
				});
			},
			directionLtr() {
				return this.s({
					"direction": "ltr",
				});
			},
			directionDefault() {
				return this.s({
					"direction": this["direction"] || context.wdoc.dir,
				});
			},
			language() {
				return this.s({
					"mso-bidi-language": this["mso-bidi-language"] || (/^(fa|ar|he)/i.test(context.wdoc.lang) ? context.wdoc.lang : "fa-IR"),
					"unicode-bidi": "embed",
				});
			},
			bidi() {
				return this.directionDefault().language();
			},
			fontFamilyMain() {
				return this.s({
					"font-family": context.wdoc.fontMain,
					"mso-fareast-font-family": "MS Mincho",
				});
			},
			fontFamilyHeadings() {
				return this.s({
					"font-family": context.wdoc.fontHeadings,
					"mso-fareast-font-family": "MS Mincho",
				});
			},
			fontSize(fs) {
				return this.s({
					"font-size": fs,
				});
			},
			fontSizeNormal() {
				return this.fontSize(context.wdoc.fontSize);
			},
			fontSizeEm(em) {
				return this.fontSize(this.em(em));
			},
			fontSizeRem(rem) {
				return this.fontSizeNormal().fontSizeEm(rem);
			},
			fontSizeSmall() {
				return this.fontSizeNormal().fontSizeEm(9 / 12);
			},
			fontSizeTiny() {
				return this.fontSizeNormal().fontSizeEm(7 / 12);
			},
			textIndentZero() {
				return this.s({
					"text-indent": "0pt",
				});
			},
			textIndentEm(em) {
				return this.s({
					"text-indent": this.em(em),
				});
			},
			textIndentNormal() {
				return this.textIndentEm(1.5);
			},
			paginationNone() {
				return this.s({
					"mso-pagination": "none",
					"page-break-after": null,
				});
			},
			paginationWidowOrphan() {
				return this.s({
					"mso-pagination": "widow-orphan lines-together",
					"page-break-after": null,
				});
			},
			paginationWidowOrphanNext() {
				return this.paginationWidowOrphan().s({
					"page-break-after": "avoid",
				});
			},
			textAlignClear() {
				return this.s({
					"text-align": null,
					"text-justify": null,
					"text-kashida": null,
				});
			},
			textAlignCenter() {
				return this.s({
					"text-align": "center",
				});
			},
			textAlignRight() {
				return this.s({
					"text-align": "right",
				});
			},
			textAlignLeft() {
				return this.s({
					"text-align": "left",
				});
			},
			textAlignStart() {
				return this.s({
					"text-align": this.direction === "rtl" ? "right" : "left",
				});
			},
			textAlignEnd() {
				return this.s({
					"text-align": this.direction === "rtl" ? "left" : "right",
				});
			},
			textAlignJustify() {
				return this.s({
					"text-align": "justify",
					"text-justify": null,
					"text-kashida": null,
				});
			},
			textAlignJustifyLow() {
				return this.s({
					"text-align": "justify",
					"text-justify": "kashida",
					"text-kashida": "0%",
				});
			},
			marginZero() {
				return this.s({
					"margin": "0mm",
				});
			},
			em(n) {
				return quantity.length(this["font-size"]).scale(n).nosp().s();
			},
			lineHeightSingle() {
				return this.s({
					"line-height": null,
					"mso-line-height-rule": null,
				});
			},
			lineHeightExactlyEm(em) {
				return this.s({
					"line-height": this.em(em),
					"mso-line-height-rule": "exactly",
				});
			},
			lineHeightNormal() {
				return this.lineHeightExactlyEm(Number(context.wdoc.lineHeightEms));
			},
			Normal() {
				return this
					.bidi()
					.fontFamilyMain()
					.fontSizeNormal()
					.marginZero()
					.textAlignStart()
					.textIndentZero()
					.paginationNone()
					.n("Normal");
			},
			MyBase() {
				return this
					.Normal()
					.textAlignJustifyLow()
					.lineHeightNormal()
					.n("Normal.MyBase");
			},
			MyDraft() {
				return this
					.MyBase()
					.textAlignClear()
					.textAlignStart()
					.lineHeightSingle()
					.n("MyBase.MyDraft");
			},
			MyDraftSmall() {
				return this
					.MyDraft()
					.fontSizeSmall()
					.n("MyDraft.MyDraftSmall");
			},
			MyDraftCenter() {
				return this
					.MyDraft()
					.textAlignCenter()
					.n("MyDraft.MyDraftCenter");
			},
			MyDraftCenterSmall() {
				return this
					.MyDraftCenter()
					.fontSizeSmall()
					.n("MyDraftCenter.MyDraftCenterSmall");
			},
			MyNormal() {
				return this
					.MyBase()
					.textIndentNormal()
					.n("MyBase.MyNormal");
			},
			MyNormal1() {
				return this
					.MyNormal()
					.textIndentZero()
					.n("MyNormal.MyNormal1.MyNormal");
			},
			MyCenterText() {
				return this
					.MyBase()
					.textAlignCenter()
					.n("MyBase.MyCenterText");
			},
			MyCenterTextSmall() {
				return this
					.MyCenterText()
					.fontSizeSmall()
					.lineHeightNormal()
					.n("MyCenterText.MyCenterTextSmall");
			},
			MyCenterTextTiny() {
				return this
					.MyCenterText()
					.fontSizeTiny()
					.lineHeightNormal()
					.n("MyCenterText.MyCenterTextTiny");
			},
			MyRightText() {
				return this
					.MyCenterText()
					.textAlignStart()
					.n("MyCenterText.MyRightText");
			},
			MyRightTextSmall() {
				return this
					.MyRightText()
					.fontSizeSmall()
					.lineHeightNormal()
					.n("MyRightText.MyRightTextSmall");
			},
			MyRightTextTiny() {
				return this
					.MyRightText()
					.fontSizeTiny()
					.lineHeightNormal()
					.n("MyRightText.MyRightTextTiny");
			},
			MyLeftText() {
				return this
					.MyCenterText()
					.textAlignEnd()
					.n("MyCenterText.MyLeftText");
			},
			MyLeftTextSmall() {
				return this
					.MyLeftText()
					.fontSizeSmall()
					.lineHeightNormal()
					.n("MyLeftText.MyLeftTextSmall");
			},
			MyLeftTextTiny() {
				return this
					.MyLeftText()
					.fontSizeTiny()
					.lineHeightNormal()
					.n("MyLeftText.MyLeftTextTiny");
			},
			MyLeftTextLtr() {
				return this
					.directionLtr()
					.MyLeftText()
					.textAlignStart()
					.n("MyLeftText.MyLeftTextLtr");
			},
			MyLeftTextLtrSmall() {
				return this
					.MyLeftTextLtr()
					.fontSizeSmall()
					.lineHeightNormal()
					.n("MyLeftTextLtr.MyLeftTextLtrSmall");
			},
			MyLeftTextLtrTiny() {
				return this
					.MyLeftTextLtr()
					.fontSizeTiny()
					.lineHeightNormal()
					.n("MyLeftTextLtr.MyLeftTextLtrTiny");
			},
			MyBlockText() {
				return this
					.MyBase()
					.s({
						"margin-top": this.em(4.5),
						"margin-bottom": this.em(4.5),
					})
					.n("MyBase.MyBlockText");
			},
			MyEquation() {
				return this
					.MyCenterText()
					.s({
						"tab-stops": `right ${context.wdoc.lineWidth$.clone().u("mm").delta(-10).s()} ${context.wdoc.lineWidth$.clone().u("mm").s()}`,
					})
					.paginationWidowOrphan()
					.lineHeightSingle()
					.n("MyCenterText.MyEquation.MyNormal1");
			},
			MyEquationIndented() {
				return this
					.MyEquation()
					.s({
						"tab-stops": `right ${context.wdoc.lineWidth$.clone().u("mm").delta(-30).s()} ${context.wdoc.lineWidth$.clone().u("mm").s()}`,
					})
					.n("MyEquationIndented.MyEquationIndented.MyNormal1");
			},
			MyFigure() {
				return this
					.MyCenterText()
					.s({
						"margin-top": "3pt",
						"margin-bottom": "3pt",
					})
					.paginationWidowOrphanNext()
					.lineHeightSingle()
					.n("MyCenterText.MyFigure.MyCaption");
			},
			MyCaption() {
				return this
					.MyCenterText()
					.s({
						"margin-top": "3pt",
						"margin-bottom": "6pt",
						"font-style": "italic",
					})
					.paginationWidowOrphan()
					.n("MyCenterText.MyCaption.MyNormal");
			},
			MyCaptionTable() {
				return this
					.MyCenterText()
					.s({
						"margin-top": "6pt",
						"margin-bottom": "3pt",
					})
					.paginationWidowOrphanNext()
					.n("MyCaption.MyCaptionTable.MyRightText");
			},
			MyHeadingBase() {
				return this
					.MyBase()
					.fontFamilyHeadings()
					.lineHeightSingle()
					.paginationWidowOrphanNext()
					.s({
						"font-weight": "bold",
						"margin-top": "12pt",
						"margin-bottom": "3pt",
						"mso-font-kerning": "0pt",
						"mso-hyphenate": "none",
					})
					.n("MyBase.MyHeadingBase.MyNormal1");
			},
			MyTitle() {
				return this
					.MyHeadingBase()
					.fontSizeEm(3)
					.textAlignCenter()
					.paginationWidowOrphanNext()
					.s({
						"margin-top": "72pt",
						"margin-bottom": "3pt",
					})
					.n("MyHeadingBase.MyTitle.MySubtitle");
			},
			MySubtitle() {
				return this
					.MyTitle()
					.fontSizeRem(1.1)
					.s({
						"font-weight": "normal",
						"font-style": "italic",
						"margin-top": "3pt",
						"margin-bottom": "24pt",
					})
					.n("MyTitle.MySubtitle.MyAuthor");
			},
			MyAuthor() {
				return this
					.MySubtitle()
					.fontFamilyMain()
					.fontSizeRem(1.2)
					.s({
						"font-weight": "bold",
						"font-style": "normal",
						"margin-top": "24pt",
						"margin-bottom": "3pt",
					})
					.n("Subtitle.MyAuthor.MyTranslator");
			},
			MyTranslator() {
				return this
					.MyAuthor()
					.s({
						"font-weight": "normal",
						"margin-top": "3pt",
						"margin-bottom": "48pt",
					})
					.n("MyAuthor.MyTranslator.MyCenterText");
			},
			MyHeading(i, rem, isBold, isItalic) {
				return this
					.MyHeadingBase()
					.fontSizeRem(rem)
					.s({
						"mso-outline-level": `${i}`,
						"font-weight": isBold ? "bold" : "normal",
						"font-style": isItalic ? "italic" : "normal",
					})
					.n(`MyHeadingBase.Heading ${i}.MyNormal1`);
			},
			MyHeading1() {
				return this.MyHeading(1, 1.33, true, false);
			},
			MyHeading2() {
				return this.MyHeading(2, 1.20, true, true);
			},
			MyHeading3() {
				return this.MyHeading(3, 1.15, true, false);
			},
			MyHeading4() {
				return this.MyHeading(4, 1.10, true, true);
			},
			MyHeading5() {
				return this.MyHeading(5, 1.05, true, false);
			},
			MyHeading6() {
				return this.MyHeading(6, 1.00, true, true);
			},
			MyHeading7() {
				return this.MyHeading(7, 1.00, false, false);
			},
			MyHeading8() {
				return this.MyHeading(8, 0.95, false, false);
			},
			MyHeading9() {
				return this.MyHeading(9, 0.90, false, false);
			},
			MyHangingRtl(i) {
				return this
					.MyBase()
					.s({
						"margin-right": this.em(1.5 * i),
						"text-indent": this.em(-1.5),
						"tab-stops": this.em(1.5),
					})
					.n(`MyBase.MyHangingRtl${i}`);
			},
			MyIndentedRtl(i) {
				return this
					.MyBase()
					.textIndentZero()
					.s({
						"margin-right": this.em(1.5 * i),
						"tab-stops": this.em(1.5),
					})
					.n(`MyBase.MyIndentedRtl${i}`);
			},
			MyHangingLtr(i) {
				return this
					.directionLtr()
					.MyBase()
					.s({
						"margin-left": this.em(1.5 * i),
						"text-indent": this.em(-1.5),
						"tab-stops": this.em(1.5),
					})
					.n(`MyBase.MyHangingLtr${i}`);
			},
			MyIndentedLtr(i) {
				return this
					.directionLtr()
					.MyBase()
					.textIndentZero()
					.s({
						"margin-left": this.em(1.5 * i),
						"tab-stops": this.em(1.5),
					})
					.n(`MyBase.MyIndentedLtr${i}`);
			},
			MyReference() {
				return this
					.directionLtr()
					.MyHangingLtr(1)
					.fontSizeSmall()
					.lineHeightNormal()
					.s({
						"margin-left": this.em(1.5),
						"text-indent": this.em(-1.5),
						"tab-stops": this.em(1.5),
					})
					.n("MyHangingLtr1.MyReference");
			},
			MyHeader() {
				return this
					.MyCenterText()
					.s({
						"tab-stops": `center ${context.wdoc.lineWidth$.clone().u("mm").scale(0.5).s()}right ${context.wdoc.lineWidth$.clone().u("mm").s()}`,
					})
					.n("MyCenterText.MyHeader");
			},
			MyHeaderFirst() {
				return this
					.MyHeader()
					.n("MyHeader.MyHeaderFirst");
			},
			MyHeaderOdd() {
				return this
					.MyHeader()
					.textAlignEnd()
					.n("MyHeader.MyHeaderOdd");
			},
			MyHeaderEven() {
				return this
					.MyHeader()
					.textAlignStart()
					.n("MyHeader.MyHeaderEven");
			},
			MyFooter() {
				return this
					.MyCenterText()
					.s({
						"tab-stops": `center ${context.wdoc.lineWidth$.clone().u("mm").scale(0.5).s()}right ${context.wdoc.lineWidth$.clone().u("mm").s()}`,
					})
					.n("MyCenterText.MyFooter");
			},
			MyFooterFirst() {
				return this
					.MyFooter()
					.n("MyFooter.MyFooterFirst");
			},
			MyFooterOdd() {
				return this
					.MyFooter()
					.textAlignEnd()
					.n("MyFooter.MyFooterOdd");
			},
			MyFooterEven() {
				return this
					.MyFooter()
					.textAlignStart()
					.n("MyFooter.MyFooterEven");
			},
			MsoHeader() {
				return this
					.MyHeader()
					.n("Normal.Header");
			},
			MsoFooter() {
				return this
					.MyHeader()
					.n("Normal.Footer");
			},
			MyFootnoteText() {
				return this
					.MyBase()
					.fontSizeSmall()
					.lineHeightNormal()
					.n("MyBase.MyFootnoteText.MyFootnoteTextIndented");
			},
			MyFootnoteTextIndented() {
				return this
					.MyFootnoteText()
					.textIndentNormal()
					.n("MyFootnoteText.MyFootnoteTextIndented.MyFootnoteTextIndented");
			},
			MsoFootnoteText() {
				return this
					.MyFootnoteText()
					.n("Normal.Footnote Text");
			},
			MyQuote() {
				return this
					.MyBase()
					.fontSizeEm(0.9)
					.lineHeightNormal()
					.textAlignStart()
					.paginationWidowOrphanNext()
					.s({
						"margin-top": this.em(2),
						"margin-right": this.em(5),
					})
					.n("MyBase.MyQuote.MyQuoteSource");
			},
			MyQuoteSource() {
				return this
					.MyQuote()
					.textAlignEnd()
					.paginationWidowOrphanNext()
					.s({
						"margin-top": "0pt",
						"margin-bottom": this.em(2),
						"font-style": "italic",
					})
					.n("MyBase.MyQuoteSource.MyNormal1");
			},
			MsoPlainText() {
				return this
					.Normal()
					.textAlignStart()
					.s({
						"font-family": context.wdoc.fontCode,
						"mso-fareast-font-family": "MS Gothic",
					})
					.n("Normal.Plain Text");
			},
			MyPlainText() {
				return this
					.MyBase()
					.textAlignStart()
					.s({
						"font-family": context.wdoc.fontCode,
						"mso-fareast-font-family": "MS Gothic",
					})
					.n("MyBase.MyPlainText");
			},
			MsoPre() {
				return this
					.directionLtr()
					.MsoPlainText()
					.n("Plain Text.HTML Preformatted");
			},
			
			MyFootnoteReference() {
				return this
				.s({
					"vertical-align": "super",
				})
				.nc("MyFootnoteReference");
			},
			MySup() {
				return this
				.s({
					"vertical-align": "super",
					"color": "green",
				})
				.nc("MySup");
			},
			MySub() {
				return this
				.s({
					"vertical-align": "sub",
					"color": "#993366",
				})
				.nc("MySub");
			},
			MyBold() {
				return this
				.s({
					"font-weight": "bold",
				})
				.nc("MyBold");
			},
			MyStrong() {
				return this
				.s({
					"font-weight": "bold",
				})
				.nc("MyStrong");
			},
			MyLiteral() {
				return this
				.s({
					"font-style": "italic",
				})
				.nc("MyLiteral");
			},
			MyItalic() {
				return this
				.s({
					"font-style": "italic",
				})
				.nc("MyItalic");
			},
			MyEmphasis() {
				return this
				.s({
					"font-style": "italic",
				})
				.nc("MyEmphasis");
			},
			MyStrongEmphasis() {
				return this
				.MyStrong()
				.MyEmphasis()
				.nc("MyStrongEmphasis");
			},
			MyReferenceText() {
				return this
				.s({
					"color": "#333399",
				})
				.nc("MyReferenceText");
			},
			MyError() {
				return this
				.s({
					"color": "red",
				})
				.nc("MyError");
			},
			MyUnderline() {
				return this
				.s({
					"text-decoration": "underline",
					"text-underline": "single",
				})
				.nc("MyUnderline");
			},
			MyHyperlink() {
				return this
				.s({
					"text-decoration": "none",
					"text-underline": "none",
				})
				.nc("MyHyperlink");
			},
			MyHyperlinkFollowed() {
				return this
				.MyHyperlink()
				.nc("MyHyperlinkFollowed");
			},
			MsoHyperlink() {
				return this
				.MyHyperlink()
				.nc("Hyperlink");
			},
			MsoHyperlinkFollowed() {
				return this
				.MyHyperlinkFollowed()
				.nc("Hyperlink Followed");
			},
			MsoCode() {
				return this
					.s({
						"font-family": context.wdoc.fontCode,
						"mso-fareast-font-family": "MS Gothic",
					})
					.n("HTML Code");
			},
			MsoNormalTable() {
				return this
				.fontSizeNormal()
				.lineHeightNormal()
				.s({
					"mso-style-parent": "",
					"mso-style-name": "Table Normal",
					
					"mso-tstyle-rowband-size": "0",
					"mso-tstyle-colband-size": "0",
					"mso-padding-alt": "0mm 5.4pt 0mm 5.4pt",
					"mso-para-margin": "0mm",
					"mso-pagination": "widow-orphan",
				});
			},
		});
	</cmn:script>
	<b:pub target="{context.wdoc.context}" msg="wdoc-before-styles"/>
	<b:style><cmn:script>
		const {ss} = context;
		
		const {St, stbound: st} = context.wdoc;

		
		ss.rule("html", st().fontSizeNormal());
		ss.rule("p", st().Normal());
		ss.rule(St.p`MsoNormal`, st().Normal());
		ss.rule(St.p`MyBase`, st().MyBase());
		ss.rule(St.p`MyDraft`, st().MyDraft());
		ss.rule(St.p`MyDraftSmall`, st().MyDraftSmall());
		ss.rule(St.p`MyDraftCenter`, st().MyDraftCenter());
		ss.rule(St.p`MyDraftCenterSmall`, st().MyDraftCenterSmall());
		ss.rule(St.p`MyNormal`, st().MyNormal());
		ss.rule(St.p`MyNormal1`, st().MyNormal1());
		ss.rule(St.p`MyCenterText`, st().MyCenterText());
		ss.rule(St.p`MyCenterTextSmall`, st().MyCenterTextSmall());
		ss.rule(St.p`MyCenterTextTiny`, st().MyCenterTextTiny());
		ss.rule(St.p`MyRightText`, st().MyRightText());
		ss.rule(St.p`MyRightTextSmall`, st().MyRightTextSmall());
		ss.rule(St.p`MyRightTextTiny`, st().MyRightTextTiny());
		ss.rule(St.p`MyLeftText`, st().MyLeftText());
		ss.rule(St.p`MyLeftTextSmall`, st().MyLeftTextSmall());
		ss.rule(St.p`MyLeftTextTiny`, st().MyLeftTextTiny());
		ss.rule(St.p`MyLeftTextLtr`, st().MyLeftTextLtr());
		ss.rule(St.p`MyLeftTextLtrSmall`, st().MyLeftTextLtrSmall());
		ss.rule(St.p`MyLeftTextLtrTiny`, st().MyLeftTextLtrTiny());
		ss.rule(St.p`MyBlockText`, st().MyBlockText());
		ss.rule(St.p`MyEquation`, st().MyEquation());
		ss.rule(St.p`MyEquationIndented`, st().MyEquationIndented());
		ss.rule(St.p`MyFigure`, st().MyFigure());
		ss.rule(St.p`MyCaption`, st().MyCaption());
		ss.rule(St.p`MyCaptionTable`, st().MyCaptionTable());
		ss.rule(St.p`MyHeadingBase`, st().MyHeadingBase());
		ss.rule(St.p`MyTitle`, st().MyTitle());
		ss.rule(St.p`MySubtitle`, st().MySubtitle());
		ss.rule(St.p`MyAuthor`, st().MyAuthor());
		ss.rule(St.p`MyTranslator`, st().MyTranslator());
		for (let i = 1; i &lt;= 9; i++) {
			ss.rule(i &lt;= 6 ? `h${i}` : St.p`MsoHeading${i}`, st()[`MyHeading${i}`]());
		}
		for (let i = 1; i &lt;= 9; i++) {
			ss.rule(St.p`MyHangingRtl${i}`, st().MyHangingRtl(i));
		}
		for (let i = 0; i &lt;= 9; i++) {
			ss.rule(St.p`MyIndentedRtl${i}`, st().MyIndentedRtl(i));
		}
		for (let i = 1; i &lt;= 9; i++) {
			ss.rule(St.p`MyHangingLtr${i}`, st().MyHangingLtr(i));
		}
		for (let i = 0; i &lt;= 9; i++) {
			ss.rule(St.p`MyIndentedLtr${i}`, st().MyIndentedLtr(i));
		}
		ss.rule(St.p`MyReference`, st().MyReference());
		ss.rule(St.p`MyHeader`, st().MyHeader());
		ss.rule(St.p`MyHeaderFirst`, st().MyHeaderFirst());
		ss.rule(St.p`MyHeaderOdd`, st().MyHeaderOdd());
		ss.rule(St.p`MyHeaderEven`, st().MyHeaderEven());
		ss.rule(St.p`MyFooter`, st().MyFooter());
		ss.rule(St.p`MyFooterFirst`, st().MyFooterFirst());
		ss.rule(St.p`MyFooterOdd`, st().MyFooterOdd());
		ss.rule(St.p`MyFooterEven`, st().MyFooterEven());
		ss.rule(St.p`MsoHeader`, st().MsoHeader());
		ss.rule(St.p`MsoFooter`, st().MsoFooter());
		ss.rule(St.p`MyQuote`, st().MyQuote());
		ss.rule(St.p`MyQuoteSource`, st().MyQuoteSource());
		ss.rule(St.p`MyFootnoteText`, st().MyFootnoteText());
		ss.rule(St.p`MyFootnoteTextIndented`, st().MyFootnoteTextIndented());
		ss.rule(St.p`MsoFootnoteText`, st().MsoFootnoteText());
		ss.rule(St.p`MsoPlainText`, st().MsoPlainText());
		ss.rule(St.p`MyPlainText`, st().MyPlainText());
		ss.rule("pre", st().MsoPre());
		
		ss.rule(St.c`MyFootnoteReference`, st().MyFootnoteReference());
		ss.rule(St.c`MySup`, st().MySup());
		ss.rule(St.c`MySub`, st().MySub());
		ss.rule(St.c`MyBold`, st().MyBold());
		ss.rule(St.c`MyStrong`, st().MyStrong());
		ss.rule(St.c`MyLiteral`, st().MyLiteral());
		ss.rule(St.c`MyItalic`, st().MyItalic());
		ss.rule(St.c`MyEmphasis`, st().MyEmphasis());
		ss.rule(St.c`MyStrongEmphasis`, st().MyStrongEmphasis());
		ss.rule(St.c`MyReferenceText`, st().MyReferenceText());
		ss.rule(St.c`MyError`, st().MyError());
		ss.rule(St.c`MyUnderline`, st().MyUnderline());
		ss.rule(St.c`MyHyperlink`, st().MyHyperlink());
		ss.rule(St.c`MyHyperlinkFollowed`, st().MyHyperlinkFollowed());
		ss.rule("a:link," + St.c`MsoHyperlink`, st().MsoHyperlink());
		ss.rule("a:visited," + St.c`MsoHyperlinkFollowed`, st().MsoHyperlinkFollowed());
		ss.rule("code", st().MsoCode());
		
		ss.rule("table.MsoNormalTable", st().MsoNormalTable());
		
		ss.rule("@page", {
			"mso-footnote-separator": `url(${context.wdoc.stub}_header.htm) fs`,
			"mso-footnote-continuation-separator": `url(${context.wdoc.stub}_header.htm) fcs`,
			"mso-endnote-separator": `url(${context.wdoc.stub}_header.htm) es`,
			"mso-endnote-continuation-separator": `url(${context.wdoc.stub}_header.htm) ecs`,
			"mso-facing-pages": "no",
			"mso-title-page": "no",
		});
		ss.rule("@list l0", {
			"mso-list-id": "-129",
			"mso-list-type": "simple",
			"mso-list-template-ids": "-1155740664",
		});
		ss.rule("ol", {
			"margin-bottom": "0mm",
		});
		ss.rule("ul", {
			"margin-bottom": "0mm",
		});
	</cmn:script></b:style>
	<b:pub target="{context.wdoc.context}" msg="wdoc-after-styles"/>
</cmn:g>
